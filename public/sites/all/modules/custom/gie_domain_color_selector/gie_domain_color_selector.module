<?php


/**
 * Implements hook_menu().
 */
function gie_domain_color_selector_menu() {
  $items = array();
  $items['admin/structure/domain/view/%domain/color_picker'] = array(
    'title' => 'Color',
    'access arguments' => array('administer domains'),
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gie_domain_color_selector_form', 4),
    'description' => 'Edit domain color selector.',
    'weight' => 50,
  );
  return $items;
}


/**
 * @param $form
 * @param $form_state
 * @param array $domain
 * @return mixed
 */
function gie_domain_color_selector_form($form, &$form_state, $domain = array()) {
  $body_class = variable_get('domain_' . $domain['machine_name'] . '_gie_domain_color_selector_body_class', 'microsite-palette1');
  $color_option = array('none', 'microsite-palette1', 'microsite-palette2');

  if ($body_class) {
    $form['color_selector'] = array(
      '#type' => 'select',
      '#options' => $color_option,
      '#title' => t('Select the Color Profile for this Site'),
      '#default_value' => array_search($body_class, $color_option)
    );
  } else {
    $form['color_selector'] = array(
      '#type' => 'select',
      '#options' => $color_option,
      '#title' => t('Select the Color Profile for this Site'),
      '#default_value' => 0
    );
  }

  $form['domain'] = array('#type' => 'value', '#value' => $domain);
  $form['submit'] = array('#type' => 'submit', '#value' => t('Save'));

  return $form;
}

/**
 * @param $form
 * @param $form_state
 * @param array $domain
 * @param array $arguments
 */
function gie_domain_color_selector_form_validate($form, &$form_state, $domain = array(), $arguments = array()) {
  if (!isset($form_state['values']['color_selector']) || !is_numeric($form_state['values']['color_selector']) || empty($form['domain']['#value']['machine_name'])) {
    form_set_error('color_selector', 'Please select a Color Profile');
  }
}

/**
 * @param $form
 * @param $form_state
 * @param array $domain
 * @param array $arguments
 */
function gie_domain_color_selector_form_submit($form, &$form_state, $domain = array(), $arguments = array()) {
  $color_option = array('none', 'microsite-palette1', 'microsite-palette2');
  if (isset($form_state['values']['color_selector']) && is_numeric($form_state['values']['color_selector']) && !empty($form['domain']['#value']['machine_name'])) {
    variable_set('domain_' . $form['domain']['#value']['machine_name'] . '_gie_domain_color_selector_body_class', $color_option[$form_state['values']['color_selector']]);
  }
}


/**
 * Implements template_preprocess_html().
 */
function gie_domain_color_selector_preprocess_html(&$variables) {
  $settings = variable_get('domain_' . $GLOBALS['_domain']['machine_name'] . '_gie_domain_color_selector_body_class', 'microsite-palette1');
  if ($settings && $settings != 'none') {
    $variables['classes_array'][] = $settings;
  }
}

/**
 * Implements hook_theme().
 */
function gie_domain_color_selector_theme($existing, $type, $theme, $path) {
  $themes = array(
    'gie_domain_color_selector_form' => array(
      'render element' => 'form',
    )
  );
  return $themes;

}
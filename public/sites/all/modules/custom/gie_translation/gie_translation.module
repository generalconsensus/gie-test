<?php
/**
 * @file
 * Code for GIE Translation.
 */

/**
 * Implements hook_block_info().
 */
function gie_translation_block_info() {
  $blocks['gie_translation_lang_modaldata'] = array(
    'info' => t('GIE Translation - Language Modal Data'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function gie_translation_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'gie_translation_lang_modaldata':

      $content = '<div class="language-modal remodal" data-remodal-id="modal-language-switcher">';
      $content .= '<div class="language-modal__x" data-remodal-action="cancel"></div>';
      $content .= '<h2 class="language-modal__title">Select Language</h2>';
      $content .= '<div class="language-modal__content"><ul class="language-modal__list">';
      global $_domain;
      $links = '';
      foreach($languages = _gie_translation_get_language() as $language) {
        $links.= '<li class="language-modal__list-item">' . l($language['title'], $_domain['scheme'] . '://' .$language['abbr'].'.'.$_domain['subdomain'], array('attributes' => ['class' => ['language-modal__link']])) . '</li>';
      }

      $content .= $links  . '</ul><button data-remodal-action="cancel" class="button button--remodal">Close</button></div></div>';

      $block['subject'] = '';
      $block['content'] = array(
        '#type' => 'markup',
        // wrap in div with user menu class to borrow styling
        '#markup' => $content,
      );
      break;
  }


  return $block;
}

/**
 * Implements hook_menu().
 */
function gie_translation_menu() {

  $items['gie_translation/%ctools_js'] = array(
    'title' => 'GIE Translation modal',
    'page arguments' => array(1),
    'page callback' => 'gie_translation_modal_page',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


function gie_translation_modal_page($js = NULL) {
  $title = t('Select Language');

  //@todo: add proper languages and abbreviations
  $languages = _gie_translation_get_language(TRUE);

  // Begin unordered list
  $contents = '<ul>';
  global $_domain;
  foreach ($languages as $language) {
    // Construct the link for the language
    $link = l($language['title'], $_domain['scheme'] . '://'.$language['abbr'].'.'.$_domain['subdomain'], array('external' => TRUE));

    // include in contents as list item
    $contents .= "<li>$link</li>";
  }

  // End unordered list
  $contents .= '</ul>';

  if ($js) {
    ctools_include('modal');
    ctools_include('ajax');

    ctools_modal_render($title, $contents);
  } else {
    return '<h2>' . $title . '</h2>' . $contents;
  }
}

/*
 * This returns the current supported languages for GIE
 */
function _gie_translation_get_language($exclude_current = FALSE) {
  $languages = [
    [
      'title' => 'English',
      'abbr' => 'en',
    ],
    [
      'title' => 'Spanish Español',
      'abbr' => 'es',
    ],
    [
      'title' => 'French Français',
      'abbr' => 'fr',
    ],
    [
      'title' => 'Korean 한국어',
      'abbr' => 'ko',
    ],
    [
      'title' => 'Hindi Bahasa हिन्दी',
      'abbr' => 'ba',
    ],
    [
      'title' => 'Swahili Kiswahili',
      'abbr' => 'ki',
    ],
  ];

  if ($exclude_current && !empty($_SERVER['HTTP_SLINKS_TRANSLATE'])) {
    foreach ($languages as $key => $language) {
      if ($languages[$key]['abbr'] == $_SERVER['HTTP_SLINKS_TRANSLATE']) {
        unset ($languages[$key]);
        break;
      }
    }
  }
  return $languages;

}


/*
 * This alters the recaptcha url to set the recpatcha in the language of the user upon load
 */
function gie_translation_google_recaptca_url_alter(&$url) {
  $lang_abbr = [];
  $languages = _gie_translation_get_language();
  foreach ($languages as $lang) {
    $lang_abbr[] = $lang['abbr'];
  }
  if (array_search($_SERVER['HTTP_SLINKS_TRANSLATE'], $lang_abbr)) {
    $url = 'https://www.google.com/recaptcha/api.js?onload=google_recaptcha_onload&render=explicit&hl=' . $_SERVER['HTTP_SLINKS_TRANSLATE'];
  }

}
